/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import dtos.UsuarioDTO;
import excepciones.PersistenciaException;
import gestores.GestorUsuarios;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ID145
 */
public class usuariosFrame extends javax.swing.JFrame {

    GestorUsuarios gu = new GestorUsuarios();

    /**
     * Creates new form usuariosFrame
     */
    public usuariosFrame() throws PersistenciaException {
        initComponents();
        List<UsuarioDTO> usuarios = gu.consultarTodos();
        cargarUsuarios(usuarios);
    }

    /**
     * Cargar los usuarios en la tabla
     * 
     * @param usuarios
     * @throws PersistenciaException
     */
    public void cargarUsuarios(List<UsuarioDTO> usuarios) throws PersistenciaException {

        DefaultTableModel model = (DefaultTableModel) tablaUsuarios.getModel();
        model.setRowCount(0);
        // Llenar la tabla con los usuarios
        for (UsuarioDTO usuario : usuarios) {
            model.addRow(new Object[] {
                    usuario.getNombre() + " " + usuario.getApellido(),
                    usuario.getCodigoInterno(),
                    usuario.getPuesto(),
                    usuario.getFechaContratacion(),
                    usuario.getTelefono()
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        botonEliminar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        botonFiltrarFechas3 = new javax.swing.JButton();
        fieldFechaDesde = new javax.swing.JTextField();
        fieldFechaHasta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldNombre = new javax.swing.JTextField();
        botonFIltrarNombre = new javax.swing.JButton();
        botonRestablecer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Usuarios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(346, 346, 346)
                                .addComponent(jLabel4)
                                .addContainerGap(369, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addContainerGap(16, Short.MAX_VALUE)));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 860, 70);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null, null },
                        { null, null, null, null, null },
                        { null, null, null, null, null },
                        { null, null, null, null, null }
                },
                new String[] {
                        "Nombre", "Codigo Interno", "Puesto", "Fecha Registro", "Tel√©fono"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 604, 329);

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(botonEliminar);
        botonEliminar.setBounds(523, 500, 80, 23);

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificar);
        botonModificar.setBounds(240, 500, 90, 23);

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(botonSalir);
        botonSalir.setBounds(80, 500, 70, 23);

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Desde:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Hasta:");

        botonFiltrarFechas3.setText("Filtrar por Fechas");
        botonFiltrarFechas3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFiltrarFechas3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nombre:");

        botonFIltrarNombre.setText("Buscar por Nombre de Usuario");
        botonFIltrarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFIltrarNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(botonFiltrarFechas3)
                                        .addComponent(fieldFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 158,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fieldFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 158,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addGroup(jPanel5Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel10)
                                                        .addComponent(jLabel9)))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addGroup(jPanel5Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3)
                                                        .addComponent(fieldNombre,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 158,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(botonFIltrarNombre)))
                                .addContainerGap(12, Short.MAX_VALUE)));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fieldFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel10)
                                .addGap(10, 10, 10)
                                .addComponent(fieldFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonFiltrarFechas3)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonFIltrarNombre)
                                .addContainerGap(38, Short.MAX_VALUE)));

        getContentPane().add(jPanel5);
        jPanel5.setBounds(630, 130, 210, 370);

        botonRestablecer.setText("Restablecer");
        botonRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRestablecerActionPerformed(evt);
            }
        });
        getContentPane().add(botonRestablecer);
        botonRestablecer.setBounds(370, 500, 110, 23);

        setBounds(0, 0, 875, 636);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Validar el formato de la fecha
     * 
     * @param fecha
     * @return boolean true si la fecha es v√°lida, false si no lo es.
     */
    private boolean validarFormatoFecha(String fecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        sdf.setLenient(false);
        try {
            sdf.parse(fecha);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    /**
     * Filtrar los usuarios por rango de fechas
     * 
     * @param evt
     */
    private void botonFiltrarFechas3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botonFiltrarFechas3ActionPerformed
        String fechaDesdeStr = fieldFechaDesde.getText();
        String fechaHastaStr = fieldFechaHasta.getText();

        // Validar el formato y los valores de las fechas
        if (!validarFormatoFecha(fechaDesdeStr) || !validarFormatoFecha(fechaHastaStr)) {
            JOptionPane.showMessageDialog(this, "Ingrese fechas v√°lidas en formato yyyy-MM-dd.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date fechaDesde = sdf.parse(fechaDesdeStr);
            Date fechaHasta = sdf.parse(fechaHastaStr);

            // Consultar los usuarios por rango de fechas
            List<UsuarioDTO> usuariosFiltrados = gu.consultarPorRangoFechas(fechaDesde, fechaHasta);

            // Cargar los usuarios filtrados en la tabla
            cargarUsuarios(usuariosFiltrados);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Error al parsear las fechas.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (PersistenciaException ex) {
            Logger.getLogger(usuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_botonFiltrarFechas3ActionPerformed

    /**
     * Filtrar los usuarios por nombre
     * 
     * @param evt
     */
    private void botonFIltrarNombreActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botonFIltrarNombreActionPerformed
        List<UsuarioDTO> usuarios = null;
        String nombre = fieldNombre.getText();
        // Validar que el nombre no est√© vac√≠o
        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un nombre v√°lido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Consultar los usuarios por nombre
            List<UsuarioDTO> usuariosFiltrados = gu.consultarPorNombre(nombre);

            // Cargar los usuarios filtrados en la tabla
            cargarUsuarios(usuariosFiltrados);
        } catch (PersistenciaException ex) {
            Logger.getLogger(usuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_botonFIltrarNombreActionPerformed

    private void botonRestablecerActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botonRestablecerActionPerformed
        List<UsuarioDTO> usuarios = null;
        try {
            usuarios = gu.consultarTodos();
        } catch (PersistenciaException ex) {
            Logger.getLogger(usuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            cargarUsuarios(usuarios);
        } catch (PersistenciaException ex) {
            Logger.getLogger(usuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        fieldFechaDesde.setText("");
        fieldFechaHasta.setText("");
        fieldNombre.setText("");
    }// GEN-LAST:event_botonRestablecerActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botonSalirActionPerformed
        dispose();
    }// GEN-LAST:event_botonSalirActionPerformed

    /**
     * Eliminar un usuario.
     * 
     * @param evt
     */
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botonEliminarActionPerformed
        // Obtener la fila seleccionada
        int filaSeleccionada = tablaUsuarios.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (filaSeleccionada != -1) {
            // Obtener el c√≥digo interno de la segunda columna (columna 1)
            String codigoInterno = (String) tablaUsuarios.getValueAt(filaSeleccionada, 1);

            try {
                // Llamar al m√©todo eliminar del GestorUsuarios
                boolean eliminado = gu.eliminar(codigoInterno);

                if (eliminado) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente.", "Eliminado",
                            JOptionPane.INFORMATION_MESSAGE);

                    // Actualizar la tabla de usuarios
                    cargarUsuarios(gu.consultarTodos());
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el usuario.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (PersistenciaException ex) {
                JOptionPane.showMessageDialog(this, "Error al eliminar el usuario: " + ex.getMessage(), "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un usuario para eliminar.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_botonEliminarActionPerformed

    /**
     * Modificar un usuario.
     * 
     * @param evt
     */
    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botonModificarActionPerformed
        // Obtener la fila seleccionada
        int filaSeleccionada = tablaUsuarios.getSelectedRow();

        // Verificar que se haya seleccionado una fila
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un usuario para modificar.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener el codigoInterno de la fila seleccionada (segunda columna)
        String codigoInterno = (String) tablaUsuarios.getValueAt(filaSeleccionada, 1);

        try {
            UsuarioDTO usuario = gu.consultarPorCodigoInterno(codigoInterno);

            // Verificar si se encontr√≥ el usuario
            if (usuario != null) {
                // Crear un nuevo frame ModificarUsuarioFrame y pasarle el usuario obtenido
                modificarUsuarioFrame modificarUsuarioFrame = new modificarUsuarioFrame(usuario);
                modificarUsuarioFrame.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontr√≥ el usuario.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (PersistenciaException ex) {
            Logger.getLogger(usuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();

    }// GEN-LAST:event_botonModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new usuariosFrame().setVisible(true);
                } catch (PersistenciaException ex) {
                    Logger.getLogger(usuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonFIltrarNombre;
    private javax.swing.JButton botonFiltrarFechas3;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonRestablecer;
    private javax.swing.JButton botonSalir;
    private javax.swing.JTextField fieldFechaDesde;
    private javax.swing.JTextField fieldFechaHasta;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
